set colorcolumn=100
set clipboard=unnamedplus
set hlsearch
set history=100000
set ideaput
set ideajoin
set ideamarks
set idearefactormode=keep
set ignorecase
set incsearch
set NERDTree
set notimeout
set number
set ReplaceWithRegister
set scrolloff=15
set showmode
set smartcase
set timeoutlen=1000
set which-key
set clipboard^=ideaput
let g:WhichKey_ShowVimActions = "true"
map Q gq
vnoremap v <Esc>
nnoremap H ^
vnoremap H ^
nnoremap L $
vnoremap L $
nnoremap U <C-r>
nnoremap Y y$
nnoremap <c-k><up>
nnoremap <c-j><down>
nnoremap <c-h><left>
nnoremap <c-l><right>
nnoremap <c-o> :action Back<CR>
nnoremap <c-i> :action Forward<CR>
inoremap <ctrl><CR> :action EditorCompleteStatement<CR>
inoremap <c-v><Esc> :action $Paste<CR>aset clipboard+=ideaput
let g:WhichKeyDesc_debug = "<Space>d Debug"
let g:WhichKeyDesc_debug_go_to_test = "<Space>dg Go to test"
nnoremap <space>dg :action GotoTest<CR>
let g:WhichKeyDesc_debug_run = "<Space>dr Run"
nnoremap <space>dr :action RunClass<CR>
let g:WhichKeyDesc_debug_rereun = "<Space>dR Rerun"
nnoremap <space>dR :action Rerun<CR>
let g:WhichKeyDesc_debug_rerun_failed = "<Space>df Rerun failed"
nnoremap <space>df :action RerunFailedTests<CR>
let g:WhichKeyDesc_debug_choose_debug_configuration = "<Space>dc Choose debug configuration"
nnoremap <space>dc :action ChooseDebugConfiguration<CR>
let g:WhichKeyDesc_debug_choose_run_configuration = "<Space>dC Choose run configuration"
nnoremap <space>dC :action ChooseRunConfiguration<CR>
let g:WhichKeyDesc_debug_toggle_breakpoint = "<Space>db Toggle breakpoint"
nnoremap <space>db :action ToggleLineBreakpoint<CR>
let g:WhichKeyDesc_debug_toggle_line_breakpoint = "<Space>dv View breakpoints"
nnoremap <space>dv :action ViewBreakpoints<CR>
let g:WhichKeyDesc_edit = "<Space>e Edit"
let g:WhichKeyDesc_edit_rename_file = "<Space>er Rename file"
nnoremap <space>eR :action RenameFile<CR>
let g:WhichKeyDesc_edit_rename_element = "<Space>eR Rename element"
nnoremap <space>er :action RenameElement<CR>
let g:WhichKeyDesc_edit_code_actions = "<Space>ea Code actions"
nnoremap <space>ea :action Refactorings.QuickListPopupAction<cr>
let g:WhichKeyDesc_edit_format = "<Space>ef Format"
nnoremap <space>ef :action ReformatFile<CR>
let g:WhichKeyDesc_find = "<Space>f Find"
let g:WhichKeyDesc_find_files = "<Space>ff Files"
nnoremap <space>ff :action GotoFile<CR>
let g:WhichKeyDesc_find_revent_files = "<Space>fr Recent files"
nnoremap <space>fr :action RecentFiles<CR>
let g:WhichKeyDesc_find_project_view = "<Space>fp Project view"
nnoremap <space>ef :action SelectInProjectView<CR>
let g:WhichKeyDesc_lsp = "<Space>l LSP"
let g:WhichKeyDesc_lsp_references = "<Space>lr References"
nnoremap <space>lr :action ShowUsages<CR>
let g:WhichKeyDesc_lsp_implementation = "<Space>li Implementation"
nnoremap <space>li :action GotoImplementation<CR>
let g:WhichKeyDesc_problems = "<Space>p Problems"
let g:WhichKeyDesc_problems_previous = "<Space>pp Previous"
nnoremap <space>pp :action GotoPreviousError<CR>
let g:WhichKeyDesc_problems_next = "<Space>pn Next"
nnoremap <space>pn :action GotoNextError<CR>
let g:WhichKeyDesc_problems_description = "<Space>pd Show description"
nnoremap <space>pd <Action>(ShowErrorDescription)
let g:WhichKeyDesc_switcher = "<Space>s Swswitcheritcher"
nnoremap <space>s :action Switcher<CR>